https://code.visualstudio.com/ > Install
https://nodejs.org/en/ > Install
https://github.com/ > create account
https://github.com/Aakashdeveloper > Follow
https://git-scm.com/downloads > Install
https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh

//Extensions
> TabNine
> vscode-icons
> git history
> git Lens
> spellCheck
> eslint


html
css
bootstrap 3,4,5
Npm
///////////////////
React = 3
Mock API
json-server

React_hooks -1
React-JWT(Login Logout)-2
Github
Deployment
-> MERN
-> Aws
-> heroku
-> Docker
-> Nginx
-> Netlify
HOC
React-GraphQL - 1 
Basic React Native- 1
React-Redux - 1
React-Redux - 1
React-PWA - 1
Testing Jest Enzime
///////Walkthrough///////
React-Saga -1
React-with-typescript-1
--------NOT Backend--------------
API
GraphQL
Login/Logout

////////////////////
React >

React is javascript framework/lib which help to build single page applications 
using component base structure

> SPA
> open source 

////
Npm
> Node Package Manager
> All the third part packages require present here
>183027

Json
> JavaScript Object Notation
> Way to present your data
> Key Value Pair
[
    {
        'name':'Nikita',
        'city':'Paris'
    },
    {
        'name':'Amit',
        'city':'Delhi'
    }
]

///////////////
Step to generate react app
/////////////

/// window //
##one time step##
> open cmd as administrator
> npm i -g create-react-app

##Next Every Time You Need New App##
> open the cmd
> go inside the folder using cd (expample> cd Desktop/pwa)
> create-react-app appname

/// mac/linux //

##one time step##
> open terminal
> sudo npm i -g create-react-app

##Next Every Time You Need New App##
> open terminal
> go inside the folder using cd (expample> cd Desktop/pwa)
> create-react-app appname

//////shortcut//////
> open cmd/terminal
> go inside the folder
> npx create-react-app appname


##step to run the app##
> open cmd/terminal
> go inside the app folder
> npm start


>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<
Package.json
> first file of my application
> entry point to my app
> all the commands (start, build, test)
> all the packages you install
> meta data(name,version, description)

## Step to generate package.json ##
*nodeJs must be install in laptop
> open cmd/terminal
> go inside the app folder
> npm init
> answer all question
> type yes


## Step to install packages ##
> go inside the app folder
> npm i packagename / npm install packagename 

package-lock > dependency tree
.gitignore > all this we dont want ot push to github 
Readme.md > Detail Description
Src > contains all the script
public > html/css

head> all the links(js, css) and title
body> all the content visible to the user

///////////////
block level
> they always start from new line
> they consume the whole of screen
> p div section

inline 
> they start in same line
> they consume the space what is required
> span a img

//////
inline
styletag
stylesheet

inline > styletag > stylesheet
div

inline{
    color:red;
    font-size:30px
}

styletag{
    color:orange;
    text-align:center;
    font-weight:bold
}

stylesheet{
    text-align:right;
    font-weight:35px;
    border-color:green;
}

div{
    color:red;
    font-size:30px;
    text-align:center;
    font-weight:bold;
    border-color:green;
}

// target Element
tagname > h1, p a
id(#) > use to target unique Element
class(.) > use to target multiple Element

solid
dotted
dashed
groove
double

<img/> 

bootstrap3
xs < 768px
sm > 768px
md > 992px
lg > 1200px

bootstrap4
col- <576px
sm > 576px
md > 768px
lg > 992px
xl > 1200px

bootstrap5
col- <576px
sm > 576px
md > 768px
lg > 992px
xl > 1200px
xxl > 1400px


bootstrap5

//////
classComponent
> logical Components
> All api call, code logic as well as display
> can maintain state

functionComponent
> dumb components
> Mainly Use for display Purposes
> Cannot maintain State



hooksComponent

//////
function add(a,b){
    return a+b
}

const add = (a,b) =>{
    return a+b
}

function add(a,b){
    return a,b
}

add(1,2)
2

/////
State
> state act like a local variable
> any data interaction will happen through state
> we can update the value of state

props
> Help to transfer data between the component
> we cannot update the value of props
> Data can be passed between 2 nested component only


///map
var a = [2,3,5,6,8,9]
a.map((data) => {return data*2})
(6) [4, 6, 10, 12, 16, 18]
var a = [2,3,5,6,8,9]
a.map((data) => {return `<p>${data*2}</p>`})
(6) ['<p>4</p>', '<p>6</p>', '<p>10</p>', '<p>12</p>', '<p>16</p>', '<p>18</p>']

/// filter
/// indexof

//es5
var a = 10
var b = "my age is" +a
b
'my age is 10'

//es6
var a = 10
var b = `my age is ${a}`
b
'my age is 10'



parent => child (Just props)
child => Parent (props with function)


child (we will call the function)
parent (we will define the function)

function add(a,b){
    return a+b
}

add(1,2)

///////////////

var a = [2,3,7,6,8,9,12]
a.filter((data) => {return data>5})
 [7, 6, 8, 9, 12]


var a = ["Delhi","Hongkong","Amsterdam"]
undefined
a.indexOf('Delhi')
0
a.indexOf('Amstrdam')
-1
a.indexOf('Amsterdam')
2
a.indexOf('Dubai')
-1
a.indexOf('Paris')
-1

////
params
> pass after /
> we need to define in route
> use for small data

queryparams
> pass after ?
> no need to define
> use for large data

///Default props
> History (Redirection)
> Location (for Queryparams)
> Match (for params)


(get) restaurants>         https://zomatoajulypi.herokuapp.com/restaurants
(get) restwrtcity >        https://zomatoajulypi.herokuapp.com/restaurant?stateId=1
(get) hoteldetails >       http://zomatoajulypi.herokuapp.com/details/1
(get) quickSearch>         https://zomatoajulypi.herokuapp.com/quicksearch
(get) onbasisofMeal >      https://zomatoajulypi.herokuapp.com/restaurant?mealtype_id=

(get) cuisinefilter >      https://zomatoajulypi.herokuapp.com/filter/4?cuisine=1

(get) costfilter >         https://zomatoajulypi.herokuapp.com/filter/1?hcost=1000&lcost=500

(get) cityname >           https://zomatoajulypi.herokuapp.com/location
(get) menu >               https://zomatoajulypi.herokuapp.com/menu/1

(post) orderspage >        http://zomatoajulypi.herokuapp.com/menuItem
                           body [1,4,5]
(get) allorder>            
(post)placeOrder >         

https://developerpayment.herokuapp.com/paynow


fetch
promise

var a = "test=hi"